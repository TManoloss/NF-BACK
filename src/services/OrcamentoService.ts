import { prisma } from "../config/database"; 


export class OrcamentoService {
  static async criarOrcamento(data: {
    descricao: string;
    servico: string;
    quantidade: number;
    data_vencimento?: Date;
    endereco: string;
    cliente_id: number;
    produtos: Array<{
      descricao: string;
      servico: string;
      quantidade: number;
      categoria?: string;
      status?: string;
    }>;
  }) {
    try {
      console.log("üìå Criando or√ßamento...");

      // Valida se h√° produtos
      if (!data.produtos || data.produtos.length === 0) {
        console.error("‚ùå Erro: O or√ßamento deve ter pelo menos um produto.");
        throw new Error("O or√ßamento deve ter pelo menos um produto."); // Erro espec√≠fico
      }

      // Cria o or√ßamento
      const orcamento = await prisma.orcamento.create({
        data: {
          descricao: data.descricao,
          servico: data.servico,
          quantidade: data.quantidade,
          data_vencimento: data.data_vencimento,
          endereco: data.endereco,
          cliente_id: data.cliente_id,
          produtos: {
            create: data.produtos,
          },
        },
        include: { produtos: true },
      });

      console.log(`‚úÖ Or√ßamento criado com sucesso! ID: ${orcamento.id}`);
      return orcamento;
    } catch (error) {
      console.error("‚ùå Erro ao criar or√ßamento:", error);
      throw error; // Lan√ßa o erro original
    }
  }



  static async listarOrcamentos() {
    try {
      const orcamentos = await prisma.orcamento.findMany({
        include: { produtos: true, cliente: true },
      });

      console.log(`üìã Listando ${orcamentos.length} or√ßamento(s).`);
      return orcamentos;
    } catch (error) {
      console.error("‚ùå Erro ao listar or√ßamentos:", error);
      throw new Error("Erro ao listar or√ßamentos");
    }
  }

  static async buscarOrcamentoPorId(id: number | string) {
    try {
      const orcamento = await prisma.orcamento.findUnique({
        where: { id: Number(id) },
        include: { produtos: true, cliente: true },
      });

      if (orcamento) {
        console.log("üîç Or√ßamento encontrado:", orcamento);
      } else {
        console.log(`‚ö† Or√ßamento com ID ${id} n√£o encontrado.`);
      }

      return orcamento;
    } catch (error) {
      console.error("‚ùå Erro ao buscar or√ßamento por ID:", error);
      throw new Error("Erro ao buscar or√ßamento");
    }
  }


  static async deletarOrcamento(id: number | string) {
    try {
      const orcamentoDeletado = await prisma.orcamento.delete({
        where: { id: Number(id) },
      });

      console.log(`üóë Or√ßamento com ID ${id} deletado com sucesso.`);
      return orcamentoDeletado;
    } catch (error) {
      console.error(`‚ùå Erro ao deletar or√ßamento com ID ${id}:`, error);
      throw new Error("Erro ao deletar or√ßamento");
    }
  }
}
